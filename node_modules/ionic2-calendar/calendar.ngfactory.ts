/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './calendar';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from './calendar.service';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/i18n/tokens';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '@angular/common/src/directives/ng_switch.ngfactory';
import * as import12 from '@angular/common/src/pipes/date_pipe';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/common/src/directives/ng_switch';
import * as import15 from '@angular/common/src/directives/ng_if.ngfactory';
import * as import16 from '@angular/common/src/directives/ng_if';
import * as import17 from 'ionic-angular/components/list/list.ngfactory';
import * as import18 from '@angular/common/src/directives/ng_for.ngfactory';
import * as import19 from 'ionic-angular/config/config';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from 'ionic-angular/platform/platform';
import * as import22 from 'ionic-angular/gestures/gesture-controller';
import * as import23 from 'ionic-angular/platform/dom-controller';
import * as import24 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import25 from '@angular/common/src/directives/ng_for';
import * as import26 from 'ionic-angular/components/list/list';
import * as import27 from 'ionic-angular/components/item/item';
import * as import28 from 'ionic-angular/components/item/item.ngfactory';
import * as import29 from '@angular/core/src/linker/query_list';
import * as import30 from 'ionic-angular/util/form';
import * as import31 from 'ionic-angular/components/item/item-reorder';
import * as import32 from './monthview';
import * as import33 from './monthview.ngfactory';
import * as import34 from './weekview';
import * as import35 from './weekview.ngfactory';
import * as import36 from './dayview';
import * as import37 from './dayview.ngfactory';
export class Wrapper_CalendarComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CalendarComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.CalendarComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
    this._expr_15 = import1.UNINITIALIZED;
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
    this._expr_22 = import1.UNINITIALIZED;
    this._expr_23 = import1.UNINITIALIZED;
    this._expr_24 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
  }
  check_currentDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.currentDate = currValue;
      this._expr_0 = currValue;
    }
  }
  check_eventSource(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.eventSource = currValue;
      this._expr_1 = currValue;
    }
  }
  check_calendarMode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.calendarMode = currValue;
      this._expr_2 = currValue;
    }
  }
  check_formatDay(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.formatDay = currValue;
      this._expr_3 = currValue;
    }
  }
  check_formatDayHeader(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.formatDayHeader = currValue;
      this._expr_4 = currValue;
    }
  }
  check_formatDayTitle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.formatDayTitle = currValue;
      this._expr_5 = currValue;
    }
  }
  check_formatWeekTitle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.formatWeekTitle = currValue;
      this._expr_6 = currValue;
    }
  }
  check_formatMonthTitle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.formatMonthTitle = currValue;
      this._expr_7 = currValue;
    }
  }
  check_formatWeekViewDayHeader(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.formatWeekViewDayHeader = currValue;
      this._expr_8 = currValue;
    }
  }
  check_formatHourColumn(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.formatHourColumn = currValue;
      this._expr_9 = currValue;
    }
  }
  check_showEventDetail(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.showEventDetail = currValue;
      this._expr_10 = currValue;
    }
  }
  check_startingDayMonth(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this._changed = true;
      this.context.startingDayMonth = currValue;
      this._expr_11 = currValue;
    }
  }
  check_startingDayWeek(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this._changed = true;
      this.context.startingDayWeek = currValue;
      this._expr_12 = currValue;
    }
  }
  check_allDayLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_13,currValue))) {
      this._changed = true;
      this.context.allDayLabel = currValue;
      this._expr_13 = currValue;
    }
  }
  check_noEventsLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_14,currValue))) {
      this._changed = true;
      this.context.noEventsLabel = currValue;
      this._expr_14 = currValue;
    }
  }
  check_queryMode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_15,currValue))) {
      this._changed = true;
      this.context.queryMode = currValue;
      this._expr_15 = currValue;
    }
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_16,currValue))) {
      this._changed = true;
      this.context.step = currValue;
      this._expr_16 = currValue;
    }
  }
  check_autoSelect(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_17,currValue))) {
      this._changed = true;
      this.context.autoSelect = currValue;
      this._expr_17 = currValue;
    }
  }
  check_markDisabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_18,currValue))) {
      this._changed = true;
      this.context.markDisabled = currValue;
      this._expr_18 = currValue;
    }
  }
  check_monthviewDisplayEventTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_19,currValue))) {
      this._changed = true;
      this.context.monthviewDisplayEventTemplate = currValue;
      this._expr_19 = currValue;
    }
  }
  check_monthviewEventDetailTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_20,currValue))) {
      this._changed = true;
      this.context.monthviewEventDetailTemplate = currValue;
      this._expr_20 = currValue;
    }
  }
  check_weekviewAllDayEventTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_21,currValue))) {
      this._changed = true;
      this.context.weekviewAllDayEventTemplate = currValue;
      this._expr_21 = currValue;
    }
  }
  check_weekviewNormalEventTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_22,currValue))) {
      this._changed = true;
      this.context.weekviewNormalEventTemplate = currValue;
      this._expr_22 = currValue;
    }
  }
  check_dayviewAllDayEventTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_23,currValue))) {
      this._changed = true;
      this.context.dayviewAllDayEventTemplate = currValue;
      this._expr_23 = currValue;
    }
  }
  check_dayviewNormalEventTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_24,currValue))) {
      this._changed = true;
      this.context.dayviewNormalEventTemplate = currValue;
      this._expr_24 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onCurrentDateChanged.subscribe(_eventHandler.bind(view,'onCurrentDateChanged'))); }
    if (emit1) { (this.subscription1 = this.context.onRangeChanged.subscribe(_eventHandler.bind(view,'onRangeChanged'))); }
    if (emit2) { (this.subscription2 = this.context.onEventSelected.subscribe(_eventHandler.bind(view,'onEventSelected'))); }
    if (emit3) { (this.subscription3 = this.context.onTimeSelected.subscribe(_eventHandler.bind(view,'onTimeSelected'))); }
    if (emit4) { (this.subscription4 = this.context.onTitleChanged.subscribe(_eventHandler.bind(view,'onTitleChanged'))); }
  }
}
var renderType_CalendarComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CalendarComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CalendarComponent>;
  _CalendarService_0_3:import6.CalendarService;
  _CalendarComponent_0_4:Wrapper_CalendarComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CalendarComponent_Host0,renderType_CalendarComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'calendar',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CalendarComponent0(this.viewUtils,this,0,this._el_0);
    this._CalendarService_0_3 = new import6.CalendarService();
    this._CalendarComponent_0_4 = new Wrapper_CalendarComponent(this._CalendarService_0_3,this.injectorGet(import9.LOCALE_ID,this.parentIndex));
    this.compView_0.create(this._CalendarComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CalendarComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.CalendarService) && (0 === requestNodeIndex))) { return this._CalendarService_0_3; }
    if (((token === import0.CalendarComponent) && (0 === requestNodeIndex))) { return this._CalendarComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CalendarComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CalendarComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CalendarComponentNgFactory:import8.ComponentFactory<import0.CalendarComponent> = new import8.ComponentFactory<import0.CalendarComponent>('calendar',View_CalendarComponent_Host0,import0.CalendarComponent);
const styles_CalendarComponent:any[] = ['[_nghost-%COMP%]    > div[_ngcontent-%COMP%] { height: 100%; }\n\n        .event-detail-container[_ngcontent-%COMP%] {\n          border-top: 2px darkgrey solid;\n        }\n\n        .no-events-label[_ngcontent-%COMP%] {\n          font-weight: bold;\n          color: darkgrey;\n          text-align: center;\n        }\n\n        .event-detail[_ngcontent-%COMP%] {\n          cursor: pointer;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n        }\n\n        .monthview-eventdetail-timecolumn[_ngcontent-%COMP%] {\n          width: 110px;\n          overflow: hidden;\n        }\n\n        .calendar-event-inner[_ngcontent-%COMP%] {\n          overflow: hidden;\n          background-color: #3a87ad;\n          color: white;\n          height: 100%;\n          width: 100%;\n          padding: 2px;\n          line-height: 15px;\n        }\n\n        @media (max-width: 750px) {\n          .calendar-event-inner[_ngcontent-%COMP%] {\n            font-size: 12px;\n          }\n        }'];
var renderType_CalendarComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_CalendarComponent,{});
export class View_CalendarComponent0 extends import2.AppView<import0.CalendarComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import10.ViewContainer;
  _TemplateRef_1_4:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import10.ViewContainer;
  _TemplateRef_3_4:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import10.ViewContainer;
  _TemplateRef_5_4:any;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _vc_7:import10.ViewContainer;
  _TemplateRef_7_4:any;
  _text_8:any;
  _el_9:any;
  _NgSwitch_9_3:import11.Wrapper_NgSwitch;
  _text_10:any;
  _anchor_11:any;
  /*private*/ _vc_11:import10.ViewContainer;
  _TemplateRef_11_5:any;
  _NgSwitchCase_11_6:import11.Wrapper_NgSwitchCase;
  _text_12:any;
  _anchor_13:any;
  /*private*/ _vc_13:import10.ViewContainer;
  _TemplateRef_13_5:any;
  _NgSwitchCase_13_6:import11.Wrapper_NgSwitchCase;
  _text_14:any;
  _anchor_15:any;
  /*private*/ _vc_15:import10.ViewContainer;
  _TemplateRef_15_5:any;
  _NgSwitchCase_15_6:import11.Wrapper_NgSwitchCase;
  _text_16:any;
  _text_17:any;
  _pipe_date_0:import12.DatePipe;
  /*private*/ _expr_37:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CalendarComponent0,renderType_CalendarComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_37 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_1 = new import10.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_4 = new import13.TemplateRef_(this,1,this._anchor_1);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_3 = new import10.ViewContainer(3,(null as any),this,this._anchor_3);
    this._TemplateRef_3_4 = new import13.TemplateRef_(this,3,this._anchor_3);
    this._text_4 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_5 = new import10.ViewContainer(5,(null as any),this,this._anchor_5);
    this._TemplateRef_5_4 = new import13.TemplateRef_(this,5,this._anchor_5);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_7 = new import10.ViewContainer(7,(null as any),this,this._anchor_7);
    this._TemplateRef_7_4 = new import13.TemplateRef_(this,7,this._anchor_7);
    this._text_8 = this.renderer.createText(parentRenderNode,'\n\n        ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSwitch_9_3 = new import11.Wrapper_NgSwitch();
    this._text_10 = this.renderer.createText(this._el_9,'\n            ',(null as any));
    this._anchor_11 = this.renderer.createTemplateAnchor(this._el_9,(null as any));
    this._vc_11 = new import10.ViewContainer(11,9,this,this._anchor_11);
    this._TemplateRef_11_5 = new import13.TemplateRef_(this,11,this._anchor_11);
    this._NgSwitchCase_11_6 = new import11.Wrapper_NgSwitchCase(this._vc_11.vcRef,this._TemplateRef_11_5,this._NgSwitch_9_3.context);
    this._text_12 = this.renderer.createText(this._el_9,'\n            ',(null as any));
    this._anchor_13 = this.renderer.createTemplateAnchor(this._el_9,(null as any));
    this._vc_13 = new import10.ViewContainer(13,9,this,this._anchor_13);
    this._TemplateRef_13_5 = new import13.TemplateRef_(this,13,this._anchor_13);
    this._NgSwitchCase_13_6 = new import11.Wrapper_NgSwitchCase(this._vc_13.vcRef,this._TemplateRef_13_5,this._NgSwitch_9_3.context);
    this._text_14 = this.renderer.createText(this._el_9,'\n            ',(null as any));
    this._anchor_15 = this.renderer.createTemplateAnchor(this._el_9,(null as any));
    this._vc_15 = new import10.ViewContainer(15,9,this,this._anchor_15);
    this._TemplateRef_15_5 = new import13.TemplateRef_(this,15,this._anchor_15);
    this._NgSwitchCase_15_6 = new import11.Wrapper_NgSwitchCase(this._vc_15.vcRef,this._TemplateRef_15_5,this._NgSwitch_9_3.context);
    this._text_16 = this.renderer.createText(this._el_9,'\n        ',(null as any));
    this._text_17 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._pipe_date_0 = new import12.DatePipe(this.parentView.injectorGet(import9.LOCALE_ID,this.parentIndex));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._anchor_11,
      this._text_12,
      this._anchor_13,
      this._text_14,
      this._anchor_15,
      this._text_16,
      this._text_17
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_4; }
    if (((token === import13.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_4; }
    if (((token === import13.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_4; }
    if (((token === import13.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_4; }
    if (((token === import13.TemplateRef) && (11 === requestNodeIndex))) { return this._TemplateRef_11_5; }
    if (((token === import14.NgSwitchCase) && (11 === requestNodeIndex))) { return this._NgSwitchCase_11_6.context; }
    if (((token === import13.TemplateRef) && (13 === requestNodeIndex))) { return this._TemplateRef_13_5; }
    if (((token === import14.NgSwitchCase) && (13 === requestNodeIndex))) { return this._NgSwitchCase_13_6.context; }
    if (((token === import13.TemplateRef) && (15 === requestNodeIndex))) { return this._TemplateRef_15_5; }
    if (((token === import14.NgSwitchCase) && (15 === requestNodeIndex))) { return this._NgSwitchCase_15_6.context; }
    if (((token === import14.NgSwitch) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 16)))) { return this._NgSwitch_9_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_9_0_0:any = this.context.calendarMode;
    this._NgSwitch_9_3.check_ngSwitch(currVal_9_0_0,throwOnChange,false);
    this._NgSwitch_9_3.ngDoCheck(this,this._el_9,throwOnChange);
    const currVal_11_0_0:any = 'month';
    this._NgSwitchCase_11_6.check_ngSwitchCase(currVal_11_0_0,throwOnChange,false);
    this._NgSwitchCase_11_6.ngDoCheck(this,this._anchor_11,throwOnChange);
    const currVal_13_0_0:any = 'week';
    this._NgSwitchCase_13_6.check_ngSwitchCase(currVal_13_0_0,throwOnChange,false);
    this._NgSwitchCase_13_6.ngDoCheck(this,this._anchor_13,throwOnChange);
    const currVal_15_0_0:any = 'day';
    this._NgSwitchCase_15_6.check_ngSwitchCase(currVal_15_0_0,throwOnChange,false);
    this._NgSwitchCase_15_6.ngDoCheck(this,this._anchor_15,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    this._vc_11.detectChangesInNestedViews(throwOnChange);
    this._vc_13.detectChangesInNestedViews(throwOnChange);
    this._vc_15.detectChangesInNestedViews(throwOnChange);
    const currVal_37:any = import3.inlineInterpolate(1,'',this.context.calendarMode,'view-container');
    if (import3.checkBinding(throwOnChange,this._expr_37,currVal_37)) {
      this.renderer.setElementProperty(this._el_9,'className',currVal_37);
      this._expr_37 = currVal_37;
    }
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_3.destroyNestedViews();
    this._vc_5.destroyNestedViews();
    this._vc_7.destroyNestedViews();
    this._vc_11.destroyNestedViews();
    this._vc_13.destroyNestedViews();
    this._vc_15.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_CalendarComponent1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 3)) { return new View_CalendarComponent2(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 5)) { return new View_CalendarComponent8(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    if ((nodeIndex == 7)) { return new View_CalendarComponent9(this.viewUtils,this,7,this._anchor_7,this._vc_7); }
    if ((nodeIndex == 11)) { return new View_CalendarComponent10(this.viewUtils,this,11,this._anchor_11,this._vc_11); }
    if ((nodeIndex == 13)) { return new View_CalendarComponent11(this.viewUtils,this,13,this._anchor_13,this._vc_13); }
    if ((nodeIndex == 15)) { return new View_CalendarComponent12(this.viewUtils,this,15,this._anchor_15,this._vc_15); }
    return (null as any);
  }
}
class View_CalendarComponent1 extends import2.AppView<any> {
  _text_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent1,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_1 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'',(null as any));
    this.init(this._text_0,((<any>this.renderer).directRenderer? (null as any): [this._text_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = import3.inlineInterpolate(1,'\n            ',this.context.view.dates[((this.context.row * 7) + this.context.col)].label,'\n        ');
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setText(this._text_0,currVal_1);
      this._expr_1 = currVal_1;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
  }
}
class View_CalendarComponent2 extends import2.AppView<any> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import10.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import15.Wrapper_NgIf;
  _text_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent2,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n            ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_1 = new import10.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import13.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import15.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._text_2 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.init(this._text_2,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import16.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.showEventDetail;
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._vc_1.nativeElement,ctx);
    this._vc_1.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_2,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_CalendarComponent3(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}
class View_CalendarComponent3 extends import2.AppView<any> {
  _el_0:any;
  _List_0_3:import17.Wrapper_List;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import10.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import18.Wrapper_NgFor;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import10.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import15.Wrapper_NgIf;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent3,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ion-list',new import3.InlineArray8(6,'class','event-detail-container','has-bouncing','false','overflow-scroll','false'),(null as any));
    this._List_0_3 = new import17.Wrapper_List(this.parentView.injectorGet(import19.Config,this.parentIndex),new import20.ElementRef(this._el_0),this.renderer,this.parentView.injectorGet(import21.Platform,this.parentIndex),this.parentView.injectorGet(import22.GestureController,this.parentIndex),this.parentView.injectorGet(import23.DomController,this.parentIndex));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import10.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import13.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import18.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.injectorGet(import24.IterableDiffers,this.parentIndex),this.parentView.parentView.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import10.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import13.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import15.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import25.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import13.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import16.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import26.List) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._List_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._List_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = ((this.parentView.context.selectedDate == null)? (null as any): this.parentView.context.selectedDate.events);
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = (((this.parentView.context.selectedDate == null)? (null as any): this.parentView.context.selectedDate.events.length) == 0);
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_CalendarComponent4(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_CalendarComponent7(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
}
class View_CalendarComponent4 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import27.Item>;
  _Item_0_3:import28.Wrapper_Item;
  _ItemContent_0_4:import28.Wrapper_ItemContent;
  _query_Label_0_0:import29.QueryList<any>;
  _query_Button_0_1:import29.QueryList<any>;
  _query_Icon_0_2:import29.QueryList<any>;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import10.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import15.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import10.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import15.Wrapper_NgIf;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  /*private*/ _expr_21:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent4,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_21 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ion-item',new import3.InlineArray2(2,'class','item item-block'),(null as any));
    this.compView_0 = new import28.View_Item0(this.viewUtils,this,0,this._el_0);
    this._Item_0_3 = new import28.Wrapper_Item(this.parentView.parentView.injectorGet(import30.Form,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import19.Config,this.parentView.parentIndex),new import20.ElementRef(this._el_0),this.renderer,this.parentView.parentView.injectorGet(import31.ItemReorder,this.parentView.parentIndex,(null as any)));
    this._ItemContent_0_4 = new import28.Wrapper_ItemContent();
    this._query_Label_0_0 = new import29.QueryList<any>();
    this._query_Button_0_1 = new import29.QueryList<any>();
    this._query_Icon_0_2 = new import29.QueryList<any>();
    this._text_1 = this.renderer.createText((null as any),'\n                        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_2 = new import10.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import13.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import15.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_4 = new import10.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import13.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import15.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','event-detail'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'',(null as any));
    this._text_8 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._query_Label_0_0.reset(([] as any[]));
    this._Item_0_3.context.contentLabel = this._query_Label_0_0.first;
    this.compView_0.create(this._Item_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import16.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import13.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import16.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import27.Item) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._Item_0_3.context; }
    if (((token === import27.ItemContent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._ItemContent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._Item_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this._ItemContent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:boolean = !this.context.$implicit.allDay;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = this.context.$implicit.allDay;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_Button_0_1.dirty) {
        this._query_Button_0_1.reset(([] as any[]));
        this._Item_0_3.context._buttons = this._query_Button_0_1;
        this._query_Button_0_1.notifyOnChanges();
      }
      if (this._query_Icon_0_2.dirty) {
        this._query_Icon_0_2.reset(([] as any[]));
        this._Item_0_3.context._icons = this._query_Icon_0_2;
        this._query_Icon_0_2.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._Item_0_3.context.ngAfterContentInit(); }
    }
    const currVal_21:any = import3.inlineInterpolate(1,'  |  ',this.context.$implicit.title,'');
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setText(this._text_7,currVal_21);
      this._expr_21 = currVal_21;
    }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {
      cb(this._text_1,ctx);
      cb(this._vc_2.nativeElement,ctx);
      this._vc_2.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_3,ctx);
      cb(this._vc_4.nativeElement,ctx);
      this._vc_4.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_5,ctx);
      cb(this._el_6,ctx);
      cb(this._text_8,ctx);
    }
    if (((nodeIndex == 0) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 4))) {  }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_CalendarComponent5(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_CalendarComponent6(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.parentView.context.eventSelected(this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_CalendarComponent5 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  _pipe_date_0_0:any;
  _pipe_date_0_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent5,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','monthview-eventdetail-timecolumn'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._pipe_date_0_0 = import3.pureProxy2((<View_CalendarComponent0>this.parentView.parentView.parentView.parentView)._pipe_date_0.transform.bind((<View_CalendarComponent0>this.parentView.parentView.parentView.parentView)._pipe_date_0));
    this._pipe_date_0_1 = import3.pureProxy2((<View_CalendarComponent0>this.parentView.parentView.parentView.parentView)._pipe_date_0.transform.bind((<View_CalendarComponent0>this.parentView.parentView.parentView.parentView)._pipe_date_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    valUnwrapper.reset();
    const currVal_2:any = import3.inlineInterpolate(2,'',valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_0,(<View_CalendarComponent0>this.parentView.parentView.parentView.parentView)._pipe_date_0.transform)(this.parentView.context.$implicit.startTime,'HH:mm')),'\n                            -\n                            ',valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_1,(<View_CalendarComponent0>this.parentView.parentView.parentView.parentView)._pipe_date_0.transform)(this.parentView.context.$implicit.endTime,'HH:mm')),'\n                        ');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_2,currVal_2))) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CalendarComponent6 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent6,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','monthview-eventdetail-timecolumn'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'All day',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CalendarComponent7 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import27.Item>;
  _Item_0_3:import28.Wrapper_Item;
  _ItemContent_0_4:import28.Wrapper_ItemContent;
  _query_Label_0_0:import29.QueryList<any>;
  _query_Button_0_1:import29.QueryList<any>;
  _query_Icon_0_2:import29.QueryList<any>;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_11:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent7,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_11 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ion-item',new import3.InlineArray2(2,'class','item item-block'),(null as any));
    this.compView_0 = new import28.View_Item0(this.viewUtils,this,0,this._el_0);
    this._Item_0_3 = new import28.Wrapper_Item(this.parentView.parentView.injectorGet(import30.Form,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import19.Config,this.parentView.parentIndex),new import20.ElementRef(this._el_0),this.renderer,this.parentView.parentView.injectorGet(import31.ItemReorder,this.parentView.parentIndex,(null as any)));
    this._ItemContent_0_4 = new import28.Wrapper_ItemContent();
    this._query_Label_0_0 = new import29.QueryList<any>();
    this._query_Button_0_1 = new import29.QueryList<any>();
    this._query_Icon_0_2 = new import29.QueryList<any>();
    this._text_1 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','no-events-label'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._query_Label_0_0.reset(([] as any[]));
    this._Item_0_3.context.contentLabel = this._query_Label_0_0.first;
    this.compView_0.create(this._Item_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import27.Item) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._Item_0_3.context; }
    if (((token === import27.ItemContent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._ItemContent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._Item_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this._ItemContent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_Button_0_1.dirty) {
        this._query_Button_0_1.reset(([] as any[]));
        this._Item_0_3.context._buttons = this._query_Button_0_1;
        this._query_Button_0_1.notifyOnChanges();
      }
      if (this._query_Icon_0_2.dirty) {
        this._query_Icon_0_2.reset(([] as any[]));
        this._Item_0_3.context._icons = this._query_Icon_0_2;
        this._query_Icon_0_2.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._Item_0_3.context.ngAfterContentInit(); }
    }
    const currVal_11:any = import3.inlineInterpolate(1,'',this.parentView.parentView.context.noEventsLabel,'');
    if (import3.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setText(this._text_3,currVal_11);
      this._expr_11 = currVal_11;
    }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {
      cb(this._text_1,ctx);
      cb(this._el_2,ctx);
      cb(this._text_4,ctx);
    }
    if (((nodeIndex == 0) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 4))) {  }
  }
}
class View_CalendarComponent8 extends import2.AppView<any> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent8,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n            ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','calendar-event-inner'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'',(null as any));
    this._text_3 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.init(this._text_3,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4:any = import3.inlineInterpolate(1,'',this.context.displayEvent.event.title,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_2,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._el_1,ctx);
    cb(this._text_3,ctx);
  }
}
class View_CalendarComponent9 extends import2.AppView<any> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent9,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n            ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','calendar-event-inner'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'',(null as any));
    this._text_3 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.init(this._text_3,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4:any = import3.inlineInterpolate(1,'',this.context.displayEvent.event.title,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_2,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._el_1,ctx);
    cb(this._text_3,ctx);
  }
}
class View_CalendarComponent10 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import32.MonthViewComponent>;
  _MonthViewComponent_0_3:import33.Wrapper_MonthViewComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent10,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'monthview',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import33.View_MonthViewComponent0(this.viewUtils,this,0,this._el_0);
    this._MonthViewComponent_0_3 = new import33.Wrapper_MonthViewComponent(this.parentView.parentView.injectorGet(import6.CalendarService,this.parentView.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_0.create(this._MonthViewComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(8,'onRangeChanged',(null as any),'onEventSelected',(null as any),'onTimeSelected',(null as any),'onTitleChanged',(null as any)),this.eventHandler(this.handleEvent_0));
    this._MonthViewComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import32.MonthViewComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MonthViewComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = (this.parentView.context.monthviewDisplayEventTemplate || (<View_CalendarComponent0>this.parentView)._TemplateRef_1_4);
    this._MonthViewComponent_0_3.check_monthviewDisplayEventTemplate(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = (this.parentView.context.monthviewEventDetailTemplate || (<View_CalendarComponent0>this.parentView)._TemplateRef_3_4);
    this._MonthViewComponent_0_3.check_monthviewEventDetailTemplate(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.formatDay;
    this._MonthViewComponent_0_3.check_formatDay(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.formatDayHeader;
    this._MonthViewComponent_0_3.check_formatDayHeader(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.context.formatMonthTitle;
    this._MonthViewComponent_0_3.check_formatMonthTitle(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parentView.context.eventSource;
    this._MonthViewComponent_0_3.check_eventSource(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = this.parentView.context.startingDayMonth;
    this._MonthViewComponent_0_3.check_startingDayMonth(currVal_0_0_6,throwOnChange,false);
    const currVal_0_0_7:any = this.parentView.context.showEventDetail;
    this._MonthViewComponent_0_3.check_showEventDetail(currVal_0_0_7,throwOnChange,false);
    const currVal_0_0_8:any = this.parentView.context.noEventsLabel;
    this._MonthViewComponent_0_3.check_noEventsLabel(currVal_0_0_8,throwOnChange,false);
    const currVal_0_0_9:any = this.parentView.context.autoSelect;
    this._MonthViewComponent_0_3.check_autoSelect(currVal_0_0_9,throwOnChange,false);
    const currVal_0_0_10:any = this.parentView.context.markDisabled;
    this._MonthViewComponent_0_3.check_markDisabled(currVal_0_0_10,throwOnChange,false);
    const currVal_0_0_11:any = this.parentView.context.locale;
    this._MonthViewComponent_0_3.check_locale(currVal_0_0_11,throwOnChange,false);
    this._MonthViewComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._MonthViewComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MonthViewComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onRangeChanged')) {
      const pd_sub_0:any = ((<any>this.parentView.context.rangeChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onEventSelected')) {
      const pd_sub_1:any = ((<any>this.parentView.context.eventSelected($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onTimeSelected')) {
      const pd_sub_2:any = ((<any>this.parentView.context.timeSelected($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onTitleChanged')) {
      const pd_sub_3:any = ((<any>this.parentView.context.titleChanged($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
class View_CalendarComponent11 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import34.WeekViewComponent>;
  _WeekViewComponent_0_3:import35.Wrapper_WeekViewComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent11,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'weekview',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import35.View_WeekViewComponent0(this.viewUtils,this,0,this._el_0);
    this._WeekViewComponent_0_3 = new import35.Wrapper_WeekViewComponent(this.parentView.parentView.injectorGet(import6.CalendarService,this.parentView.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_0.create(this._WeekViewComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(8,'onRangeChanged',(null as any),'onEventSelected',(null as any),'onTimeSelected',(null as any),'onTitleChanged',(null as any)),this.eventHandler(this.handleEvent_0));
    this._WeekViewComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import34.WeekViewComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._WeekViewComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = (this.parentView.context.weekviewAllDayEventTemplate || (<View_CalendarComponent0>this.parentView)._TemplateRef_5_4);
    this._WeekViewComponent_0_3.check_weekviewAllDayEventTemplate(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = (this.parentView.context.weekviewNormalEventTemplate || (<View_CalendarComponent0>this.parentView)._TemplateRef_7_4);
    this._WeekViewComponent_0_3.check_weekviewNormalEventTemplate(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.formatWeekTitle;
    this._WeekViewComponent_0_3.check_formatWeekTitle(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.formatWeekViewDayHeader;
    this._WeekViewComponent_0_3.check_formatWeekViewDayHeader(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.context.formatHourColumn;
    this._WeekViewComponent_0_3.check_formatHourColumn(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parentView.context.startingDayWeek;
    this._WeekViewComponent_0_3.check_startingDayWeek(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = this.parentView.context.allDayLabel;
    this._WeekViewComponent_0_3.check_allDayLabel(currVal_0_0_6,throwOnChange,false);
    const currVal_0_0_7:any = this.parentView.context.hourParts;
    this._WeekViewComponent_0_3.check_hourParts(currVal_0_0_7,throwOnChange,false);
    const currVal_0_0_8:any = this.parentView.context.eventSource;
    this._WeekViewComponent_0_3.check_eventSource(currVal_0_0_8,throwOnChange,false);
    const currVal_0_0_9:any = this.parentView.context.markDisabled;
    this._WeekViewComponent_0_3.check_markDisabled(currVal_0_0_9,throwOnChange,false);
    const currVal_0_0_10:any = this.parentView.context.locale;
    this._WeekViewComponent_0_3.check_locale(currVal_0_0_10,throwOnChange,false);
    this._WeekViewComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._WeekViewComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._WeekViewComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._WeekViewComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onRangeChanged')) {
      const pd_sub_0:any = ((<any>this.parentView.context.rangeChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onEventSelected')) {
      const pd_sub_1:any = ((<any>this.parentView.context.eventSelected($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onTimeSelected')) {
      const pd_sub_2:any = ((<any>this.parentView.context.timeSelected($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onTitleChanged')) {
      const pd_sub_3:any = ((<any>this.parentView.context.titleChanged($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
class View_CalendarComponent12 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import36.DayViewComponent>;
  _DayViewComponent_0_3:import37.Wrapper_DayViewComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CalendarComponent12,renderType_CalendarComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'dayview',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import37.View_DayViewComponent0(this.viewUtils,this,0,this._el_0);
    this._DayViewComponent_0_3 = new import37.Wrapper_DayViewComponent(this.parentView.parentView.injectorGet(import6.CalendarService,this.parentView.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_0.create(this._DayViewComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(8,'onRangeChanged',(null as any),'onEventSelected',(null as any),'onTimeSelected',(null as any),'onTitleChanged',(null as any)),this.eventHandler(this.handleEvent_0));
    this._DayViewComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import36.DayViewComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DayViewComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = (this.parentView.context.dayviewAllDayEventTemplate || (<View_CalendarComponent0>this.parentView)._TemplateRef_5_4);
    this._DayViewComponent_0_3.check_dayviewAllDayEventTemplate(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = (this.parentView.context.dayviewNormalEventTemplate || (<View_CalendarComponent0>this.parentView)._TemplateRef_7_4);
    this._DayViewComponent_0_3.check_dayviewNormalEventTemplate(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.formatHourColumn;
    this._DayViewComponent_0_3.check_formatHourColumn(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.formatDayTitle;
    this._DayViewComponent_0_3.check_formatDayTitle(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.context.allDayLabel;
    this._DayViewComponent_0_3.check_allDayLabel(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parentView.context.hourParts;
    this._DayViewComponent_0_3.check_hourParts(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = this.parentView.context.eventSource;
    this._DayViewComponent_0_3.check_eventSource(currVal_0_0_6,throwOnChange,false);
    const currVal_0_0_7:any = this.parentView.context.markDisabled;
    this._DayViewComponent_0_3.check_markDisabled(currVal_0_0_7,throwOnChange,false);
    const currVal_0_0_8:any = this.parentView.context.locale;
    this._DayViewComponent_0_3.check_locale(currVal_0_0_8,throwOnChange,false);
    this._DayViewComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._DayViewComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DayViewComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DayViewComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onRangeChanged')) {
      const pd_sub_0:any = ((<any>this.parentView.context.rangeChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onEventSelected')) {
      const pd_sub_1:any = ((<any>this.parentView.context.eventSelected($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onTimeSelected')) {
      const pd_sub_2:any = ((<any>this.parentView.context.timeSelected($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onTitleChanged')) {
      const pd_sub_3:any = ((<any>this.parentView.context.titleChanged($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
